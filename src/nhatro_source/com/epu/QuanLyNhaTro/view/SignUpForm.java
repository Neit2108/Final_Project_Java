package com.epu.QuanLyNhaTro.view;

import com.epu.QuanLyNhaTro.controller.LoginController;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import lombok.Getter;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.SQLException;
import java.util.Locale;
import java.util.Vector;

public class SignUpForm extends JFrame {
    private JPanel loginPnl;

    @Getter
    private JTextField emailField;
    @Getter
    private JButton signUpBtn;
    @Getter
    private JTextField verifyField;
    @Getter
    private JPasswordField passwordField1;
    @Getter
    private JPasswordField passwordField2;
    @Getter
    private JButton getCodeButton;
    @Getter
    private JButton logBtn;

    private JPanel signUpPnl;
    private JPanel txtPnl;

    private JLabel emailLbl;
    private JLabel passLbl;
    private JLabel pass2Lbl;


    public SignUpForm() throws SQLException {
        loginPnl = new JPanel();
        loginPnl.setLayout(new BorderLayout());
        loginPnl.setBackground(Color.LIGHT_GRAY);

        // Panel bên trái với màu sắc riêng biệt
        signUpPnl = new JPanel();
        signUpPnl.setBackground(new Color(144, 238, 144)); // Màu xanh nhạt
        signUpPnl.setPreferredSize(new Dimension(150, 400));
        loginPnl.add(signUpPnl, BorderLayout.WEST);

        // Panel chính để nhập thông tin
        txtPnl = new JPanel();
        txtPnl.setLayout(new GridBagLayout());
        txtPnl.setBackground(Color.WHITE);

        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(10, 10, 10, 10);
        gbc.fill = GridBagConstraints.HORIZONTAL;

        // Tiêu đề
        JLabel titleLbl = new JLabel("Đăng Ký", SwingConstants.CENTER);
        titleLbl.setFont(new Font("Segoe UI", Font.BOLD, 24));
        titleLbl.setForeground(Color.DARK_GRAY);
        gbc.gridwidth = 2;
        gbc.gridx = 0;
        gbc.gridy = 0;
        txtPnl.add(titleLbl, gbc);

        // Nhãn Email
        emailLbl = new JLabel("Email");
        emailLbl.setFont(new Font("Segoe UI", Font.BOLD, 14));
        gbc.gridwidth = 1;
        gbc.gridx = 0;
        gbc.gridy = 1;
        txtPnl.add(emailLbl, gbc);

        emailField = new JTextField(20);
        gbc.gridx = 1;
        gbc.gridy = 1;
        txtPnl.add(emailField, gbc);

        // Nhãn Mật Khẩu
        passLbl = new JLabel("Mật Khẩu");
        passLbl.setFont(new Font("Segoe UI", Font.BOLD, 14));
        gbc.gridx = 0;
        gbc.gridy = 2;
        txtPnl.add(passLbl, gbc);

        passwordField1 = new JPasswordField(20);
        gbc.gridx = 1;
        gbc.gridy = 2;
        txtPnl.add(passwordField1, gbc);

        // Nhãn Nhập lại mật khẩu
        pass2Lbl = new JLabel("Nhập lại mật khẩu");
        pass2Lbl.setFont(new Font("Segoe UI", Font.BOLD, 14));
        gbc.gridx = 0;
        gbc.gridy = 3;
        txtPnl.add(pass2Lbl, gbc);

        passwordField2 = new JPasswordField(20);
        gbc.gridx = 1;
        gbc.gridy = 3;
        txtPnl.add(passwordField2, gbc);

        // Nút Đăng Ký
        signUpBtn = new JButton("Đăng ký");
        signUpBtn.setFont(new Font("Segoe UI", Font.BOLD, 14));
        signUpBtn.setBackground(new Color(100, 149, 237));
        signUpBtn.setForeground(Color.WHITE);
        gbc.gridx = 1;
        gbc.gridy = 5;
        txtPnl.add(signUpBtn, gbc);

        // Thêm panel vào giao diện chính
        loginPnl.add(txtPnl, BorderLayout.CENTER);

        // Phần đăng nhập phía dưới
        JPanel bottomPnl = new JPanel(new FlowLayout(FlowLayout.LEFT));
        bottomPnl.setBackground(Color.LIGHT_GRAY);

        JLabel haveAccountLbl = new JLabel("Bạn đã có tài khoản ?");
        logBtn = new JButton("Đăng nhập");
        logBtn.setFont(new Font("Segoe UI", Font.BOLD, 12));
        logBtn.setBackground(new Color(192, 192, 192)); // Màu xám nhạt
        logBtn.setForeground(Color.BLACK);

        bottomPnl.add(haveAccountLbl);
        bottomPnl.add(logBtn);
        loginPnl.add(bottomPnl, BorderLayout.SOUTH);

        //xu ly su kien nut dang ky
        LoginController loginController = new LoginController(this, new signUpCode());
        loginController.initController();

        this.setContentPane(loginPnl);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setSize(700, 400);
        this.setLocationRelativeTo(null);
        this.setVisible(true);

    }


    public static void main(String[] args) throws SQLException {
        new SignUpForm();
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        loginPnl = new JPanel();
        loginPnl.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        loginPnl.setOpaque(true);
        loginPnl.setPreferredSize(new Dimension(700, 400));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel1.setBackground(new Color(-12451928));
        loginPnl.add(panel1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        signUpPnl = new JPanel();
        signUpPnl.setLayout(new GridLayoutManager(4, 2, new Insets(0, 0, 0, 0), -1, -1));
        loginPnl.add(signUpPnl, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        txtPnl = new JPanel();
        txtPnl.setLayout(new GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        signUpPnl.add(txtPnl, new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        emailField = new JTextField();
        Font emailFieldFont = this.$$$getFont$$$("Segoe UI", -1, 18, emailField.getFont());
        if (emailFieldFont != null) emailField.setFont(emailFieldFont);
        txtPnl.add(emailField, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        emailLbl = new JLabel();
        Font emailLblFont = this.$$$getFont$$$("Segoe UI", -1, 18, emailLbl.getFont());
        if (emailLblFont != null) emailLbl.setFont(emailLblFont);
        emailLbl.setText("Email");
        txtPnl.add(emailLbl, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        passLbl = new JLabel();
        Font passLblFont = this.$$$getFont$$$("Segoe UI", -1, 18, passLbl.getFont());
        if (passLblFont != null) passLbl.setFont(passLblFont);
        passLbl.setText("Mật Khẩu");
        txtPnl.add(passLbl, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        pass2Lbl = new JLabel();
        Font pass2LblFont = this.$$$getFont$$$("Segoe UI", -1, 18, pass2Lbl.getFont());
        if (pass2LblFont != null) pass2Lbl.setFont(pass2LblFont);
        pass2Lbl.setText("Nhập lại mật khẩu");
        txtPnl.add(pass2Lbl, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        passwordField1 = new JPasswordField();
        Font passwordField1Font = this.$$$getFont$$$("Segoe UI", -1, 18, passwordField1.getFont());
        if (passwordField1Font != null) passwordField1.setFont(passwordField1Font);
        txtPnl.add(passwordField1, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        passwordField2 = new JPasswordField();
        Font passwordField2Font = this.$$$getFont$$$("Segoe UI", -1, 18, passwordField2.getFont());
        if (passwordField2Font != null) passwordField2.setFont(passwordField2Font);
        txtPnl.add(passwordField2, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        signUpPnl.add(panel2, new GridConstraints(2, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        signUpBtn = new JButton();
        Font signUpBtnFont = this.$$$getFont$$$("Segoe UI", -1, 18, signUpBtn.getFont());
        if (signUpBtnFont != null) signUpBtn.setFont(signUpBtnFont);
        signUpBtn.setText("Đăng ký");
        panel2.add(signUpBtn, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(30, 30), null, 0, false));
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        signUpPnl.add(panel3, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$("Segoe UI", -1, 18, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setText("Đăng Ký");
        panel3.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Bạn đã có tài khoản ? ");
        signUpPnl.add(label2, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        logBtn = new JButton();
        logBtn.setText("Đăng nhập");
        signUpPnl.add(logBtn, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return loginPnl;
    }


}
